server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: ai-messagecraft
  
  # Reactive Web Configuration
  webflux:
    multipart:
      max-in-memory-size: 1MB
      max-disk-usage-per-part: 10MB

logging:
  level:
    com.portfolio.summarize: INFO
    reactor.netty: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# OpenAI Configuration
openai:
  api-key: ${OPENAI_API_KEY:your-api-key-here}
  base-url: ${OPENAI_BASE_URL:https://api.openai.com/v1}
  model: ${OPENAI_MODEL:gpt-4}
  max-tokens: ${OPENAI_MAX_TOKENS:1000}
  temperature: ${OPENAI_TEMPERATURE:0.7}

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha 